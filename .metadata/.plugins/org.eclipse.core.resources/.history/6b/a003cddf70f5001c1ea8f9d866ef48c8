package com.pauloedums.microservicecamela.routes.patterns;

import java.util.List;

import org.apache.camel.AggregationStrategy;
import org.apache.camel.Exchange;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.model.dataformat.JsonLibrary;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.pauloedums.microservicecamela.CurrencyExchange;
import com.pauloedums.microservicecamela.routes.patterns.EipPatternsRouter.ArrayListAggregationStrategy;

@Component
public class EipPatternsRouter extends RouteBuilder {
	
	public class ArrayListAggregationStrategy implements AggregationStrategy {
		
		
		
		@Override
		public Exchange aggregate(Exchange oldExchange, Exchange newExchange) {
			// TODO Auto-generated method stub
			return newExchange;
		}

	}

	@Autowired
	SplitterComponent splitterComponent;

	@Override
	public void configure() throws Exception {
		// Pipeline
		// Content Based Routing - choice
		// Multicast

		//		from("timer:multicast?period=10000")
//		.multicast()
//		.to("log:something1", "log:something2");
		
//		from("file:files/csv")
//		.unmarshal().csv()
//		.split(body())
//		.to("activemq:split-queue");
		
		// Message, Message2, Message3
//		from("file:files/csv")
//		.convertBodyTo(String.class)
//		.split(method(splitterComponent))
//		.to("activemq:split-queue");
		
		// Aggregate
		// Messages => Aggregate => Endpoint
		// to , 3
		from("file:files/aggregate-json")
		.unmarshal().json(JsonLibrary.Jackson, CurrencyExchange.class)
		.aggregate(simple("${body.to}"), new ArrayListAggregationStrategy())
		.completionSize(3)
		//.completionTimeout(HIGHEST)
		.to("log:aggregate-json");
				
	}

}


@Component
class SplitterComponent {
	public List<String> splitInput(String body){
		return List.of("ABC", "DEF", "GHT");
	}
}